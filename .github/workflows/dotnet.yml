name: IKVM

on:
  push:
    branches: [ openjdk_msbuild ]
  pull_request:
    branches: [ openjdk_msbuild ]

jobs:
  build-openjdk8:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install JDK 8
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'
    - name: Install JDK 8 Build Dependencies
      run: sudo apt-get install libx11-dev libxext-dev libxrender-dev libxtst-dev libxt-dev libcups2-dev libasound2-dev
    - name: Cache Open JDK 8 Build
      uses: actions/cache@v3
      with:
        path: openjdk8/build/linux-x86_64-normal-server-release
        key: ${{ runner.os }}-${{ hashFiles('openjdk8/**') }}
    - name: Configure OpenJDK 8
      run: bash ./configure --with-extra-cxxflags="-fno-lifetime-dse -fno-delete-null-pointer-checks" --with-import-hotspot=""
      working-directory: openjdk8
    - name: Build OpenJDK 8
      run: make
      working-directory: openjdk8
      env:
        DISABLE_HOTSPOT_OS_VERSION_CHECK: ok
    - uses: actions/upload-artifact@v2
      with:
        name: openjdk8-build-linux-x86_64
        path: openjdk8/build/linux-x86_64-normal-server-release
  build-ikvm:
    needs:
      build-openjdk8
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 3.1.x
    - uses: actions/download-artifact@v2
      with:
        name: openjdk8-build-linux-x86_64
        path: openjdk8/build/linux-x86_64-normal-server-release
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./rebuild
    - name: Build
      run: dotnet build --no-restore
      working-directory: ./rebuild
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ./rebuild
