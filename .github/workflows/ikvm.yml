name: IKVM

on:
  push:
    branches: [ openjdk_msbuild ]
  pull_request:
    branches: [ openjdk_msbuild ]

jobs:
  download-openjdk8:
    name: Download OpenJDK 7
    runs-on: ubuntu-18.04
    steps:
    - name: Get
      run: curl -o openjdk-7u75-b13-linux-x64-18_dec_2014.tar.gz "https://download.java.net/openjdk/jdk7u75/ri/openjdk-7u75-b13-linux-x64-18_dec_2014.tar.gz"
    - name: Put
      uses: actions/upload-artifact@v2
      with:
        name: openjdk-7u75-b13-linux-x64-18_dec_2014.tar.gz
        path: openjdk-7u75-b13-linux-x64-18_dec_2014.tar.gz
  build-openjdk8:
    name: Build OpenJDK 8
    needs:
      download-openjdk8
    runs-on: ubuntu-18.04
    container:
      image: debian/eol:lenny
    steps:
    - name: Install Debian Build Tools
      shell: bash
      run: |
        echo "deb http://archive.debian.org/debian/ lenny main" > /etc/apt/sources.list &&
        apt-get update &&
        apt-get install -y \
          build-essential \
          unzip \
          zip \
          curl \
          gcc-4.3 \
          g++-4.3 \
          libx11-dev \
          libxext-dev \
          libxrender-dev \
          libxtst-dev \
          libxt-dev \
          libcups2-dev \
          libasound2-dev \
          libfreetype6-dev \
          libfontconfig1-dev
    - name: Checkout Source
      uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Download OpenJDK 7
      uses: actions/download-artifact@v1
      with:
        name: openjdk-7u75-b13-linux-x64-18_dec_2014.tar.gz
        path: openjdk8/build
    - name: Extract OpenJDK 7
      run: tar xzvf openjdk-7u75-b13-linux-x64-18_dec_2014.tar.gz
      working-directory: openjdk8/build
    - name: Configure OpenJDK 8
      run: JAVA_HOME=build/java-se-7u75-ri bash ./configure
      working-directory: openjdk8
    - name: Build OpenJDK 8
      run: make DISABLE_HOTSPOT_OS_VERSION_CHECK=oklangtools corba jdk
      working-directory: openjdk8
    - name: Zip OpenJDK 8
      run: |
        zip -r openjdk8-build-linux-x86_64-normal-server-release.zip \
          build/linux-x86_64-normal-server-release/langtools/gensrc \
          build/linux-x86_64-normal-server-release/corba/gensrc \
          build/linux-x86_64-normal-server-release/jdk/gensrc \
          build/linux-x86_64-normal-server-release/jdk/impsrc \
          build/linux-x86_64-normal-server-release/jdk/lib \
          build/linux-x86_64-normal-server-release/jdk/classes
      working-directory: openjdk8
    - name: Upload OpenJDK 8
      uses: actions/upload-artifact@v2
      with:
        name: openjdk8-build-linux-x86_64-normal-server-release
        path: openjdk8-build-linux-x86_64-normal-server-release.zip
  build-ikvm-linux:
    name: Build IKVM (Linux)
    needs:
      build-openjdk8
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Setup .NET 3.1
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 3.1.x
    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Download OpenJDK 8 Build
      uses: actions/download-artifact@v2
      with:
        name: openjdk8-build-linux-x86_64-normal-server-release
        path: .
    - name: Restore OpenJDK 8 Build
      run: unzip -o openjdk8-build-linux-x86_64-normal-server-release.zip
      working-directory: openjdk8
    - name: DotNet Restore
      run: dotnet restore
      working-directory: ./rebuild
    - name: DotNet Build
      run: dotnet build --no-restore
      working-directory: ./rebuild
    - name: DotNet Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ./rebuild
  build-ikvm-windows:
    name: Build IKVM (Windows)
    needs:
      build-openjdk8
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Setup .NET 3.1
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 3.1.x
    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Download OpenJDK 8 Build
      uses: actions/download-artifact@v2
      with:
        name: openjdk8-build-linux-x86_64-normal-server-release
        path: .
    - name: Restore OpenJDK 8 Build
      run: unzip -o openjdk8-build-linux-x86_64-normal-server-release.zip
    - name: DotNet Restore
      run: dotnet restore
      working-directory: ./rebuild
    - name: DotNet Build
      run: dotnet build --no-restore
      working-directory: ./rebuild
    - name: DotNet Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ./rebuild
