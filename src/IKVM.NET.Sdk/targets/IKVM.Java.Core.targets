<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    </PropertyGroup>

    <PropertyGroup>
        <UseIkvmTasks Condition=" '$(UseIkvmTasks)' == '' ">true</UseIkvmTasks>
        <ReferenceExportOutputPath>$(IntermediateOutputPath)refexp\</ReferenceExportOutputPath>
        <ClassOutputPath>$(IntermediateOutputPath)classes\</ClassOutputPath>
    </PropertyGroup>

    <!-- References may be derived from various sources: ProjectReference or IkvmReference. In each case, compilation of the Java
         code requires the original Java class or JAR files as input. These are attached as metadata to each possible reference.
    -->
    <Target Name="GetReferenceClasspath" DependsOnTargets="ResolveReferences;FindReferenceAssembliesForReferences">
        <ItemGroup>
            <Classpath Include="@(ReferencePath->'%(JavaClasspath)')" Condition=" '%(ReferencePath.JavaClasspath)' != '' " />
        </ItemGroup>
    </Target>

    <!-- Compiles the set of exports to be made, along with their original assembly file path. -->
    <Target Name="ResolveReferenceExports" DependsOnTargets="ResolveReferences;FindReferenceAssembliesForReferences">
        <ItemGroup>
            <ReferenceExport Include="@(ReferencePath->'$(ReferenceExportOutputPath)%(Filename).jar')" Condition=" '%(ReferencePath.JavaClasspath)' == '' And '%(Filename)' != 'System.Runtime.Serialization' ">
                <AssemblyFile>%(Identity)</AssemblyFile>
            </ReferenceExport>
        </ItemGroup>
    </Target>

    <!-- Abstract target to conduct actual assembly exports. Overridden either by Command or Task implementation. -->
    <Target Name="_BuildReferenceExports" DependsOnTargets="ResolveReferenceExports" Inputs="%(ReferenceExport.AssemblyFile)" Outputs="%(ReferenceExport.Identity)">
        <Error Text="_BuildReferenceExports not implemented." />
    </Target>

    <PropertyGroup>
        <BuildReferenceExportsDependsOn>
            $(BuildReferenceExportsDependsOn);
            ResolveReferences;
            FindReferenceAssembliesForReferences;
            ResolveReferenceExports;
            _BuildReferenceExports;
        </BuildReferenceExportsDependsOn>
    </PropertyGroup>

    <Target Name="BuildReferenceExports" DependsOnTargets="$(BuildReferenceExportsDependsOn)">
        <ItemGroup>
            <Classpath Include="@(ReferenceExport)" />
        </ItemGroup>
    </Target>

    <Target Name="CleanReferenceExports">
        <Delete Files="@(ReferenceExport)" />
        <RemoveDir Directories="$(ReferenceExportOutputPath);$(ReferenceExportOutputPath)tmp" />
    </Target>

    <PropertyGroup>
        <CleanDependsOn>
            $(CleanDependsOn);
            CleanReferenceExports;
        </CleanDependsOn>
    </PropertyGroup>

    <PropertyGroup>
        <_CompileJavaStampFile>$(IntermediateOutputPath)$(MSBuildProjectName).javac.stamp</_CompileJavaStampFile>
        <_CompileJavaResponseFile>$(IntermediateOutputPath)$(MSBuildProjectName).javac.rsp</_CompileJavaResponseFile>
    </PropertyGroup>

    <!-- Abstract target to conduct actual Java compilation. Overridden either by Command or Task implementation. -->
    <Target Name="_CompileJava" DependsOnTargets="BuildReferenceExports" Inputs="@(Compile);@(Classpath)" Outputs="$(_CompileJavaStampFile)">
        <Error Text="_CompileJava not implemented." />
    </Target>

    <PropertyGroup>
        <CompileJavaDependsOn>
            $(CompileJavaDependsOn)
            GetReferenceClasspath;
            BuildReferenceExports;
            _CompileJava;
        </CompileJavaDependsOn>
    </PropertyGroup>

    <Target Name="CompileJava" DependsOnTargets="$(CompileJavaDependsOn)">
        <ItemGroup>
            <Class Include="$(ClassOutputPath)**\*.class" />
        </ItemGroup>
    </Target>

    <Target Name="CleanCompileJava">
        <Delete Files="$(_CompileJavaCoreStampFile)" />
        <Delete Files="$(_CompileJavaCoreJavacArgFile)" />
        <RemoveDir Directories="$(ClassOutputPath)" />
    </Target>

    <PropertyGroup>
        <CleanDependsOn>
            $(CleanDependsOn);
            CleanCompileJava;
        </CleanDependsOn>
    </PropertyGroup>

    <PropertyGroup>
        <_AssemblyTempPath>$(IntermediateOutputPath)java\</_AssemblyTempPath>
        <_ExcludeFilePath>$(IntermediateOutputPath)$(MSBuildProjectName).exclude</_ExcludeFilePath>
        <_IkvmCompilerResponseFile>$(IntermediateOutputPath)$(MSBuildProjectName).ikvmc.rsp</_IkvmCompilerResponseFile>
    </PropertyGroup>

    <!-- Abstract target to conduct compilation. Overridden either by Command or Task implementation. -->
    <Target Name="_CoreCompile" DependsOnTargets="CompileJava" Inputs="$(IkvmRuntimeAssembly);$(KeyOriginatorFile);@(MapFile);@(ReferencePathWithRefAssemblies);@(Class);@(JavaResource);$(_CompileJavaStampFile)" Outputs="@(IntermediateAssembly);@(_DebugSymbolsIntermediatePath)">
        <Error Text="_CoreCompile not implemented." />
    </Target>

    <PropertyGroup>
        <CoreCompileDependsOn>
            $(CoreCompileDependsOn);
            CompileJava;
            _CoreCompile;
        </CoreCompileDependsOn>
    </PropertyGroup>

    <Target Name="CoreCompile" DependsOnTargets="$(CoreCompileDependsOn)">
        <CallTarget Targets="$(TargetsTriggeredByCompilation)" Condition="'$(TargetsTriggeredByCompilation)' != ''" />
    </Target>

    <Target Name="CleanCoreCompile">
        <Delete Files="$(_ExcludeFilePath)" />
        <Delete Files="$(_IkvmCompilerResponseFile)" />
        <RemoveDir Directories="$(_AssemblyTempPath)" />
    </Target>

    <PropertyGroup>
        <CleanDependsOn>
            $(CleanDependsOn);
            CleanCoreCompile;
        </CleanDependsOn>
    </PropertyGroup>

    <!-- Include Task or Command implementation of targets. -->
    <Import Project="IKVM.Java.Core.Tasks.targets" Condition=" '$(UseIkvmTasks)' == 'true' "/>
    <Import Project="IKVM.Java.Core.NoTasks.targets" Condition=" '$(UseIkvmTasks)' != 'true' "/>

</Project>
