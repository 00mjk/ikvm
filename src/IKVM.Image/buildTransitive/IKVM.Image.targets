<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    </PropertyGroup>

    <Choose>
        <When Condition="$([MSBuild]::IsTargetFrameworkCompatible('net461', '$(TargetFramework)'))">
            <PropertyGroup>
                <_IkvmImageTargetFramework>net461</_IkvmImageTargetFramework>
            </PropertyGroup>
        </When>
        <When Condition="$([MSBuild]::IsTargetFrameworkCompatible('netcoreapp3.1', '$(TargetFramework)'))">
            <PropertyGroup>
                <_IkvmImageTargetFramework>netcoreapp3.1</_IkvmImageTargetFramework>
            </PropertyGroup>
        </When>
    </Choose>

    <!-- Adds an index value to each item. Can be used to ensure at least one unique metadata value is available on each item. -->
    <UsingTask TaskName="_IkvmImageItemDistinct" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
        <ParameterGroup>
            <Items ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" Output="true" />
        </ParameterGroup>
        <Task>
            <Using Namespace="System" />
            <Using Namespace="System.Collections.Generic" />
            <Code Type="Fragment" Language="cs">
                <![CDATA[
                var hs = new HashSet<string>();
                var ls = new List<ITaskItem>();
                foreach (var item in Items)
                    if (hs.Add(item.GetMetadata("TargetPath")))
                        ls.Add(item);
                        
                Items = ls.ToArray();
                ]]>
            </Code>
        </Task>
    </UsingTask>
    
    <ItemGroup>
        <IkvmImageRuntimeIdentifier Include="win7-x64" />
        <IkvmImageRuntimeIdentifier Include="win7-x86" />
        <IkvmImageRuntimeIdentifier Include="linux-x64" />
    </ItemGroup>

    <Target Name="GetIkvmImageCopyToOutputDirectoryItemsForRuntimeIdentifier" Outputs="%(IkvmImageRuntimeIdentifier.Identity)">
        <PropertyGroup>
            <_IkvmImageRuntimeIdentifier>%(IkvmImageRuntimeIdentifier.Identity)</_IkvmImageRuntimeIdentifier>
        </PropertyGroup>
        
        <ItemGroup>
            <_IkvmImageContentWithTargetPath Include="@(IkvmImageItem)" Condition=" '%(IkvmImageItem.TargetFramework)' == 'any' And '%(IkvmImageItem.RuntimeIdentifier)' == 'any' ">
                <TargetPath>ikvm\$(_IkvmImageRuntimeIdentifier)\%(IkvmImageItem.TargetPath)</TargetPath>
            </_IkvmImageContentWithTargetPath>
            <_IkvmImageContentWithTargetPath Include="@(IkvmImageItem)" Condition=" '%(IkvmImageItem.TargetFramework)' == '$(_IkvmImageTargetFramework)' And '%(IkvmImageItem.RuntimeIdentifier)' == 'any' ">
                <TargetPath>ikvm\$(_IkvmImageRuntimeIdentifier)\%(IkvmImageItem.TargetPath)</TargetPath>
            </_IkvmImageContentWithTargetPath>
            <_IkvmImageContentWithTargetPath Include="@(IkvmImageItem)" Condition=" '%(IkvmImageItem.TargetFramework)' == '$(_IkvmImageTargetFramework)' And '%(IkvmImageItem.RuntimeIdentifier)' == '$(_IkvmImageRuntimeIdentifier)' ">
                <TargetPath>ikvm\$(_IkvmImageRuntimeIdentifier)\%(IkvmImageItem.TargetPath)</TargetPath>
            </_IkvmImageContentWithTargetPath>
        </ItemGroup>
    </Target>

    <Target Name="GetIkvmImageCopyToOutputDirectoryItems" DependsOnTargets="GetIkvmImageCopyToOutputDirectoryItemsForRuntimeIdentifier">
        <_IkvmImageItemDistinct Items="@(_IkvmImageContentWithTargetPath)">
            <Output TaskParameter="Items" ItemName="__IkvmImageContentWithTargetPath" />
        </_IkvmImageItemDistinct>
        
        <ItemGroup>
            <ContentWithTargetPath Include="@(__IkvmImageContentWithTargetPath)" RemoveMetadata="RuntimeIdentifier;TargetFramework">
                <Pack>false</Pack>
                <Private>false</Private>
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            </ContentWithTargetPath>
        </ItemGroup>
    </Target>

    <PropertyGroup>
        <GetCopyToOutputDirectoryItemsDependsOn>
            GetIkvmImageCopyToOutputDirectoryItemsForRuntimeIdentifier;
            GetIkvmImageCopyToOutputDirectoryItems;
            $(GetCopyToOutputDirectoryItemsDependsOn);
        </GetCopyToOutputDirectoryItemsDependsOn>
    </PropertyGroup>

</Project>
