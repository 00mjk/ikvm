<Project>
    <Import Project="$(MSBuildThisFileDirectory)..\IKVM.NET.Sdk\Sdk\Sdk.props" />
    <Import Project="$(MSBuildThisFileDirectory)..\..\openjdk.props" />

    <PropertyGroup>
        <PackageId>IKVM.Java</PackageId>
        <TargetFrameworks>net461;netcoreapp3.1</TargetFrameworks>
        <AssemblyName>IKVM.Java</AssemblyName>
        <AssemblyTitle>IKVM.NET Java Standard Edition 8 Platform</AssemblyTitle>
        <Description>IKVM.NET Java Standard Edition 8 Platform</Description>
        <TransformOnBuild>true</TransformOnBuild>
        <Bootstrap>true</Bootstrap>
        <UseIkvmTasks>false</UseIkvmTasks>
        <UseIkvmProjectReferences>true</UseIkvmProjectReferences>
        <DisableImplicitIkvmPackageReference>true</DisableImplicitIkvmPackageReference>
        <DisableImplicitIkvmMSBuildPackageReference>true</DisableImplicitIkvmMSBuildPackageReference>
    </PropertyGroup>

    <ItemGroup>
        <InternalsVisibleTo Include="IKVM.Runtime" />
        <InternalsVisibleTo Include="IKVM.Runtime.JNI" />
        <InternalsVisibleTo Include="IKVM.AWT.WinForms" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="SharpZipLib" Version="1.3.3" />
        <PackageReference Include="System.Memory" Version="4.5.5" />
    </ItemGroup>

    <ItemGroup Condition=" '$(TargetFramework)' == 'net461' ">
        <Reference Include="System.Configuration" />
        <Reference Include="System.IO.Compression" />
        <Reference Include="System.Security" />
    </ItemGroup>

    <ItemGroup Condition=" '$(TargetFramework)' == 'netcoreapp3.1' ">
        <PackageReference Include="Microsoft.Extensions.DependencyModel" Version="6.0.0" />
        <PackageReference Include="Microsoft.Win32.Registry" Version="5.0.0" />
        <PackageReference Include="System.Configuration.ConfigurationManager" Version="6.0.0" />
        <PackageReference Include="System.Drawing.Common" Version="6.0.0" />
        <PackageReference Include="System.Data.Odbc" Version="6.0.0" />
        <PackageReference Include="System.IO.Compression" Version="4.3.0" />
        <PackageReference Include="System.IO.FileSystem.AccessControl" Version="5.0.0" />
        <PackageReference Include="System.Runtime" Version="4.3.1" />
        <PackageReference Include="System.Runtime.InteropServices" Version="4.3.0" />
        <PackageReference Include="System.Runtime.Loader" Version="4.3.0" />
        <PackageReference Include="System.Security.Cryptography.Pkcs" Version="6.0.1" />
        <PackageReference Include="System.Security.AccessControl" Version="6.0.0" />
        <PackageReference Include="System.Security.Permissions" Version="6.0.0" />
        <PackageReference Include="System.Security.Principal.Windows" Version="5.0.0" />
        <PackageReference Include="System.Threading.AccessControl" Version="6.0.0" />
    </ItemGroup>

    <Choose>
        <!-- This is a major limitation which prevents building on Linux.
             The version of the tool that is executed should be that of the current MSBuild platform, not that being targeted.
             However, at present Frameworks builds of IKVM cannot generate Core version assemblies. -->
        <When Condition=" '$(TargetFramework)' == 'netcoreapp3.1' ">
            <PropertyGroup>
                <_IkvmTargetFramework>netcoreapp3.1</_IkvmTargetFramework>
                <_IkvmToolExecPrefix>dotnet exec </_IkvmToolExecPrefix>
            </PropertyGroup>
        </When>
        <When Condition=" '$(TargetFramework)' == 'net461' ">
            <PropertyGroup>
                <_IkvmTargetFramework>net461</_IkvmTargetFramework>
                <_IkvmToolExecPrefix></_IkvmToolExecPrefix>
            </PropertyGroup>
        </When>
    </Choose>

    <ItemGroup>
        <ProjectReference Include="..\IKVM.Runtime-ref\IKVM.Runtime-ref.csproj">
            <PrivateAssets>All</PrivateAssets>
            <Private>False</Private>
            <IsIkvmRuntimeAssembly>true</IsIkvmRuntimeAssembly>
        </ProjectReference>
        <ProjectReference Include="..\ikvmc\ikvmc.csproj" Condition=" '$(_IkvmTargetFramework)' != '' ">
            <PrivateAssets>All</PrivateAssets>
            <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
            <Private>False</Private>
            <IsIkvmCompiler>true</IsIkvmCompiler>
            <SetTargetFramework>TargetFramework=$(_IkvmTargetFramework)</SetTargetFramework>
        </ProjectReference>
        <ProjectReference Include="..\ikvmstub\ikvmstub.csproj" Condition=" '$(_IkvmTargetFramework)' != '' ">
            <PrivateAssets>All</PrivateAssets>
            <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
            <Private>False</Private>
            <IsIkvmExporter>true</IsIkvmExporter>
            <SetTargetFramework>TargetFramework=$(_IkvmTargetFramework)</SetTargetFramework>
        </ProjectReference>
    </ItemGroup>

    <ItemGroup>
        <T4ParameterValues Include="OpenJdkImplementationVersion">
            <Value>$(OpenJdkImplementationVersion)</Value>
            <Visible>False</Visible>
        </T4ParameterValues>
        <T4ParameterValues Include="OpenJdkSpecificationVersion">
            <Value>$(OpenJdkSpecificationVersion)</Value>
            <Visible>False</Visible>
        </T4ParameterValues>
        <T4ParameterValues Include="OpenJdkFullVersion">
            <Value>$(OpenJdkFullVersion)</Value>
            <Visible>False</Visible>
        </T4ParameterValues>
        <T4ParameterValues Include="OpenJdkVersion">
            <Value>$(OpenJdkVersion)</Value>
            <Visible>False</Visible>
        </T4ParameterValues>
        <T4ParameterValues Include="Version">
            <Value>$(Version)</Value>
            <Visible>False</Visible>
        </T4ParameterValues>
        <T4ParameterValues Include="FileVersion">
            <Value>$(FileVersion)</Value>
            <Visible>False</Visible>
        </T4ParameterValues>
    </ItemGroup>

    <ItemGroup>
        <JavaResource Include="local\**\*" Exclude="local\**\*.java;**\*.tt" ResourcePath="%(RecursiveDir)%(Filename)%(Extension)" />
    </ItemGroup>

    <ItemGroup>
        <Compile Include="@(OpenJdkSource)" LinkBase="openjdk" />
        <JavaResource Include="@(OpenJdkResource)" LinkBase="openjdk" />
        <ExcludeRegex Include="@(OpenJdkExcludeRegex)" />
    </ItemGroup>

    <ItemGroup>
        <None Include="local\java\lang\PropertyConstants.java.tt">
            <Generator>TextTemplatingFileGenerator</Generator>
            <OutputFileName>PropertyConstants.java</OutputFileName>
        </None>
        <Compile Remove="local\java\lang\PropertyConstants.java" />
        <Compile Include="local\java\lang\PropertyConstants.java">
            <AutoGen>True</AutoGen>
            <DependentUpon>PropertyConstants.java.tt</DependentUpon>
        </Compile>
    </ItemGroup>

    <ItemGroup>
        <None Include="local\META-INF\MANIFEST.MF.tt">
            <Generator>TextTemplatingFileGenerator</Generator>
            <OutputFileName>MANIFEST.MF</OutputFileName>
        </None>
        <JavaResource Remove="local\META-INF\MANIFEST.MF" />
        <JavaResource Include="local\META-INF\MANIFEST.MF">
            <AutoGen>True</AutoGen>
            <DependentUpon>MANIFEST.MF.tt</DependentUpon>
            <ResourcePath>META-INF\MANIFEST.MF</ResourcePath>
        </JavaResource>
    </ItemGroup>

    <ItemGroup>
        <None Include="local\nashorn\version.properties.tt">
            <Generator>TextTemplatingFileGenerator</Generator>
            <OutputFileName>version.properties</OutputFileName>
        </None>
        <JavaResource Remove="local\nashorn\version.properties" />
        <JavaResource Include="local\nashorn\version.properties">
            <AutoGen>True</AutoGen>
            <DependentUpon>version.properties.tt</DependentUpon>
            <ResourcePath>nashorn/version.properties</ResourcePath>
        </JavaResource>
    </ItemGroup>

    <ItemGroup>
        <MapFile Include="map.xml" />
    </ItemGroup>

    <Import Project="$(MSBuildThisFileDirectory)..\IKVM.NET.Sdk\Sdk\Sdk.targets" />
    <Import Project="$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v$(VisualStudioVersion)\TextTemplating\Microsoft.TextTemplating.targets" Condition="Exists('$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v$(VisualStudioVersion)\TextTemplating\Microsoft.TextTemplating.targets')" />

    <Target Name="ResolveRmiStubInputItems" DependsOnTargets="CompileJava">
        <ItemGroup>
            <RmiStubInputItem Include="@(Classpath)" />
            <RmiStubInputItem Include="$(ClassOutputPath)**\*.class" />
        </ItemGroup>
    </Target>

    <Target Name="GetRmicExe">
        <PropertyGroup>
            <Rmic>rmic</Rmic>
        </PropertyGroup>
    </Target>

    <PropertyGroup>
        <RmiStubsOutputPath>$(IntermediateOutputPath)rmistubs\</RmiStubsOutputPath>
    </PropertyGroup>

    <Target Name="_BuildRmiStubs" DependsOnTargets="GetRmicExe;ResolveRmiStubInputItems" Inputs="@(RmiStubInputItem)" Outputs="$(_BuildRmiStubsCoreStampFile)">
        <ItemGroup>
            <_RmicClasspath Include="@(Classpath);$(ClassOutputPath)" />
            <_RmicArgs Include="-J-client" />
            <_RmicArgs Include="-J-Xms128m" />
            <_RmicArgs Include="-nowarn" />
            <_RmicArgs Include="-bootclasspath" />
            <_RmicArgs Include="@(_RmicClasspath, '$([System.IO.Path]::PathSeparator)')" />
            <_RmicArgs Include="-d" />
            <_RmicArgs Include="$(RmiStubsOutputPath)" />
        </ItemGroup>
        <PropertyGroup>
            <_RmicArgs>@(_RmicArgs, ' ')</_RmicArgs>
        </PropertyGroup>
        <Delete Files="$(RmiStubsOutputPath)**\*" />
        <MakeDir Directories="$(RmiStubsOutputPath)" />
        <Exec Command="$(Rmic) $(_RmicArgs) %(OpenJdkRmiStub.Flags) %(OpenJdkRmiStub.Identity)" />
        <Touch Files="$(_BuildRmiStubsCoreStampFile)" AlwaysCreate="true" ForceTouch="true" />
    </Target>

    <PropertyGroup>
        <BuildRmiStubsDependsOn>
            $(BuildRmiStubsDependsOn)
            CompileJava;
            ResolveRmiStubInputItems;
            _BuildRmiStubs;
        </BuildRmiStubsDependsOn>
    </PropertyGroup>

    <Target Name="BuildRmiStubs" DependsOnTargets="$(BuildRmiStubsDependsOn)">
        <ItemGroup>
            <Class Include="$(RmiStubsOutputPath)**\*.class" />
        </ItemGroup>
    </Target>

    <Target Name="CleanRmiStubs">
        <Delete Files="$(_BuildRmiStubsCoreStampFile)" />
        <RemoveDir Directories="$(RmiStubsOutputPath)" />
    </Target>

    <PropertyGroup>
        <CleanDependsOn>
            $(CleanDependsOn);
            CleanRmiStubs;
        </CleanDependsOn>
    </PropertyGroup>

    <PropertyGroup>
        <CoreCompileDependsOn>
            BuildRmiStubs;
            $(CoreCompileDependsOn);
        </CoreCompileDependsOn>
    </PropertyGroup>

</Project>
