<Project>

    <PropertyGroup>
        <IkvmStageDir Condition=" '$(IkvmStageDir)' == '' ">$(IntermediateOutputPath)ikvm-stage\</IkvmStageDir>
        <IkvmCacheDir Condition=" '$(IkvmCacheDir)' == '' ">$(IkvmHomeDir)cache\1\</IkvmCacheDir>
    </PropertyGroup>

    <!-- Gathers those references which are either related to the Framework itself, or IKVM. -->
    <Target Name="GetJavaFrameworkReferences" DependsOnTargets="GetReferenceAssemblyPaths;ResolvePackageAssets">
        <ItemGroup>
            <JavaFrameworkReference Include="@(Reference)" Condition=" '%(Reference.NuGetIsFrameworkReference)' == 'true' Or '%(Reference.FrameworkReferenceName)' != '' " />
            <JavaFrameworkReference Include="@(Reference)" Condition=" '%(Reference.NuGetPackageId)' == 'IKVM' " />
            <IkvmRuntimeAssembly Include="@(Reference)" Condition=" '%(Reference.NuGetPackageId)' == 'IKVM' And '%(Filename)%(Extension)' == 'IKVM.Runtime.dll' " />
        </ItemGroup>
    </Target>

    <!-- Transforms the JavaReference item group into JavaReferenceItem items. -->
    <Target Name="GetJavaReferenceItemsFromJavaReferences" DependsOnTargets="GetJavaFrameworkReferences">
        <ItemGroup>
            <_JavaReferenceItem Include="@(JavaReference)">
                
            </_JavaReferenceItem>
        </ItemGroup>

        <!-- Probes for default metadata from the reference item. -->
        <IkvmAssignJavaReferenceItemMetadata Items="@(_JavaReferenceItem)">
            <Output TaskParameter="Items" ItemName="_JavaReferenceItemWithMetadata" />
        </IkvmAssignJavaReferenceItemMetadata>

        <!-- Probes for default metadata from the reference item. -->
        <IkvmAssignJavaReferenceItemIdentity Items="@(_JavaReferenceItemWithMetadata)" ToolFramework="$(IkvmToolFramework)" RuntimeAssembly="@(IkvmRuntimeAssembly)" References="@(JavaFrameworkReference)" >
            <Output TaskParameter="Items" ItemName="_JavaReferenceItemWithIdentity" />
        </IkvmAssignJavaReferenceItemIdentity>

        <!-- Sorts the JavaReferenceItems based on their references to each other. -->
        <IkvmSortJavaReferenceItem Items="@(_JavaReferenceItemWithIdentity)" >
            <Output TaskParameter="Items" ItemName="_JavaReferenceItemInOrder" />
        </IkvmSortJavaReferenceItem>

        <!-- Cache path is determined based on the identity. -->
        <ItemGroup>
            <JavaReferenceItem Include="@(_JavaReferenceItemInOrder)">
                <StagePath>$(IkvmStageDir)%(IkvmIdentity)\%(AssemblyName).dll</StagePath>
                <CachePath>$(IkvmCacheDir)%(IkvmIdentity)\%(AssemblyName).dll</CachePath>
            </JavaReferenceItem>
        </ItemGroup>
    
</Target>

    <PropertyGroup>
        <GetJavaReferenceItemsDependsOn>
            $(GetJavaReferenceItemsDependsOn);
            GetJavaFrameworkReferences;
            GetJavaReferenceItemsFromJavaReferences;
        </GetJavaReferenceItemsDependsOn>
    </PropertyGroup>

    <!-- Assembles the set of JavaReferenceItems from various sources. -->
    <Target Name="GetJavaReferenceItems" DependsOnTargets="$(GetJavaReferenceItemsDependsOn)" Returns="@(JavaReferenceItem)">

    </Target>

    <!-- Builds the JavaReferenceItems into their output items within the cache. -->
    <Target Name="_BuildJavaReferenceAssemblies" DependsOnTargets="GetJavaReferenceItems;GetReferenceAssemblyPaths;ResolvePackageAssets" Inputs="@(JavaReferenceItem)" Outputs="%(JavaReferenceItem.CachePath)">
        <ItemGroup>
            <_IkvmcReferences Include="@(JavaFrameworkReference)" />
        </ItemGroup>
        <PropertyGroup>
            <_IkvmcNoStdLib Condition=" '$(IkvmToolFramework)' == 'netcoreapp3.1' ">true</_IkvmcNoStdLib>
        </PropertyGroup>

        <MakeDir Directories="$([System.IO.Path]::GetDirectoryName('%(JavaReferenceItem.StagePath)'))" />
        <IkvmCompiler
            ToolPath="$(IkvmcTool)"
            UseDotNetExec="$(IkvmUseDotNetExec)"
            ResponseFile="%(JavaReferenceItem.StagePath).rsp"
            Output="%(JavaReferenceItem.StagePath)"
            Debug="%(JavaReferenceItem.Debug)"
            Assembly="%(JavaReferenceItem.AssemblyName)"
            Version="%(JavaReferenceItem.AssemblyVersion)"
            Runtime="@(IkvmRuntimeAssembly)"
            CompressResources="true"
            Target="library"
            NoStdLib="$(_IkvmcNoStdLib)"
            References="@(_IkvmcReferences)"
            Input="%(JavaReferenceItem.FullPath)" />

        <MakeDir Directories="$([System.IO.Path]::GetDirectoryName('%(JavaReferenceItem.CachePath)'))" />
        <Copy SourceFiles="%(JavaReferenceItem.StagePath)" DestinationFiles="%(JavaReferenceItem.CachePath)" OverwriteReadOnlyFiles="true" />

        <ItemGroup>
            <JavaAssemblyReference Include="%(JavaReferenceItem.Identity)" Condition=" '%(JavaReferenceItem.CachePath)' != '' ">
                <HintPath>%(JavaReferenceItem.CachePath)</HintPath>
                <Aliases>%(JavaReferenceItem.Aliases)</Aliases>
            </JavaAssemblyReference>
        </ItemGroup>
    </Target>

    <PropertyGroup>
        <BuildJavaReferenceAssembliesDependsOn>
            $(BuildJavaReferenceAssembliesDependsOn);
            GetReferenceAssemblyPaths;
            GetJavaReferenceItems;
            GetJavaFrameworkReferences;
            _BuildJavaReferenceAssemblies;
        </BuildJavaReferenceAssembliesDependsOn>
    </PropertyGroup>

    <Target Name="BuildJavaReferenceAssemblies" DependsOnTargets="$(BuildJavaReferenceAssembliesDependsOn)">

    </Target>

    <Target Name="ResolveJavaReferenceAssemblies" DependsOnTargets="BuildJavaReferenceAssemblies" BeforeTargets="ResolveAssemblyReferences">
        <ItemGroup>
            <Reference Include="@(JavaAssemblyReference)" />
        </ItemGroup>
    </Target>

</Project>
