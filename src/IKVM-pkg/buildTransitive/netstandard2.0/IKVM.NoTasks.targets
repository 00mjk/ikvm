<Project>
    <PropertyGroup>
        <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    </PropertyGroup>

    <!--
    This file contains targets which invoke the jobs in 'NoTask' mode. The tasks provided by MSBuild are not used.
    -->

    <!-- Populates the IkvmReferenceItem set with file hashes, required to identify unique stage directory. -->
    <Target Name="_UpdateIkvmReferenceItemsFileHash" DependsOnTargets="GetIkvmReferenceItemsFromIkvmReferences" Condition=" '@(IkvmReferenceItem)' != '' ">
        <GetFileHash Files="@(IkvmReferenceItem)" MetadataName="FileHash">
            <Output TaskParameter="Items" ItemName="_IkvmReferenceItemWithFileHash" />
        </GetFileHash>
    </Target>
    
    <!-- Writes some identifying information to a manifest file for each item, this allows us to hash a file to collect the final identity.  -->
    <Target Name="_OutputIkvmReferenceItemsManifest" DependsOnTargets="_UpdateIkvmReferenceItemsFileHash" Inputs="@(_IkvmReferenceItemWithFileHash)" Outputs="$(IkvmStageDir)manifests\%(_IkvmReferenceItemWithFileHash.FileHash).manifest" Condition=" '@(_IkvmReferenceItemWithFileHash)' != '' ">
        <ItemGroup>
            <_IkvmReferenceManifestLine Remove="@(_IkvmReferenceManifestLine)" />
            <_IkvmReferenceManifestLine Include="TargetFramework=$(TargetFramework)" />
            <_IkvmReferenceManifestLine Include="FileHash=%(_IkvmReferenceItemWithFileHash.FileHash)" />
        </ItemGroup>
        <WriteLinesToFile Lines="@(_IkvmReferenceManifestLine)" File="$(IkvmStageDir)manifests\%(_IkvmReferenceItemWithFileHash.FileHash).manifest" Overwrite="true" WriteOnlyWhenDifferent="true" />
    </Target>

    <!-- Hashes the manifests for the identity and rebuilds the IkvmReferenceItem set with the path metadata. -->
    <Target Name="_UpdateIkvmReferenceItemsMetadataFromManifest" DependsOnTargets="_OutputIkvmReferenceItemsManifest">
        <ItemGroup>
            <_IkvmReferenceManifest Include="@(_IkvmReferenceItemWithFileHash->'$(IkvmStageDir)manifests\%(FileHash).manifest')">
                <OriginalIdentity>%(Identity)</OriginalIdentity>
            </_IkvmReferenceManifest>
        </ItemGroup>
        <GetFileHash Files="@(_IkvmReferenceManifest)" MetadataName="IkvmIdentity">
            <Output TaskParameter="Items" ItemName="_IkvmReferenceManifestWithIdentity" />
        </GetFileHash>
        <ItemGroup>
            <IkvmReferenceItem Remove="@(IkvmReferenceItem)" />
            <IkvmReferenceItem Include="@(_IkvmReferenceManifestWithIdentity->'%(OriginalIdentity)')">
                <IkvmIdentity>%(IkvmIdentity)</IkvmIdentity>
            </IkvmReferenceItem>
        </ItemGroup>
    </Target>

    <!-- Updates any missing metadata on the items. -->
    <Target Name="_UpdateIkvmReferenceItemsMissingMetadata" DependsOnTargets="_UpdateIkvmReferenceItemsMetadataFromManifest" Condition=" '@(IkvmReferenceItem)' != '' ">
        <ItemGroup>
            <IkvmReferenceItem Update="@(IkvmReferenceItem)">
                <Compile>%(FullPath)</Compile>
                <AssemblyName>%(Filename)</AssemblyName>
                <AssemblyVersion>1.0.0.0</AssemblyVersion>
                <AssemblyFileVersion>1.0.0.0</AssemblyFileVersion>
                <StagePath>$(IkvmStageDir)%(IkvmIdentity)\%(Filename).dll</StagePath>
                <CachePath>$(IkvmCacheDir)%(IkvmIdentity)\%(Filename).dll</CachePath>
            </IkvmReferenceItem>
        </ItemGroup>
    </Target>

    <PropertyGroup>
        <_UpdateIkvmReferenceItemsMetadataDependsOn>
            $(_UpdateIkvmReferenceItemsMetadataDependsOn);
            _UpdateIkvmReferenceItemsFileHash;
            _OutputIkvmReferenceItemsManifest;
            _UpdateIkvmReferenceItemsMetadataFromManifest;
            _UpdateIkvmReferenceItemsMissingMetadata;
        </_UpdateIkvmReferenceItemsMetadataDependsOn>
    </PropertyGroup>

    <!-- Hashes the manifests for the identity and rebuilds the IkvmReferenceItem set with the path metadata. -->
    <Target Name="_UpdateIkvmReferenceItemsMetadata" DependsOnTargets="$(_UpdateIkvmReferenceItemsMetadataDependsOn)" Condition=" '@(IkvmReferenceItem)' != '' ">
        
    </Target>

    <!-- Builds the IkvmReferenceItem set into their output items within the cache. -->
    <Target Name="_CompileIkvmReferences" DependsOnTargets="ResolveIkvmCompiler;ResolveIkvmRuntimeAssembly;ResolveIkvmRuntimeJNIAssembly;ResolveIkvmBaseAssembly;ResolveIkvmFrameworkReferences;_GetIkvmReferenceItemsCompileToCachePath" Inputs="$(IkvmCompilerPath);@(IkvmFrameworkReference);$(IkvmBaseAssembly);$(IkvmRuntimeAssembly);$(IkvmRuntimeJNIAssembly);@(_IkvmReferenceItemCompileToCachePath)" Outputs="%(_IkvmReferenceItemCompileToCachePath.CachePath)" Condition=" '@(_IkvmReferenceItemCompileToCachePath.CachePath)' != '' ">
        <!-- Take IkvmReferenceItem for the current batch on CachePath. -->
        <PropertyGroup>
            <_IkvmReferenceItemToCompileCachePath>%(_IkvmReferenceItemCompileToCachePath.CachePath)</_IkvmReferenceItemToCompileCachePath>
        </PropertyGroup>
        <ItemGroup>
            <_IkvmReferenceItemToCompile Remove="@(_IkvmReferenceItemToCompile)" />
            <_IkvmReferenceItemToCompile Include="@(IkvmReferenceItem)" Condition=" '%(IkvmReferenceItem.CachePath)' == '$(_IkvmReferenceItemToCompileCachePath)' " />
            <_IkvmReferenceItemResolvedReference Remove="@(_IkvmReferenceItemResolvedReference)" />
            <_IkvmReferenceItemResolvedReference Include="%(_IkvmReferenceItemToCompile.ResolvedReferences)" />
        </ItemGroup>

        <!-- Output to stage path then copy to cache path to be atomic. -->
        <MakeDir Directories="$([System.IO.Path]::GetDirectoryName('%(_IkvmReferenceItemToCompile.StagePath)'))" />
        <MakeDir Directories="$([System.IO.Path]::GetDirectoryName('%(_IkvmReferenceItemToCompile.CachePath)'))" />

        <ItemGroup>
            <_IkvmCompilerArgs Remove="@(_IkvmCompilerArgs)" />
            <_IkvmCompilerArgs Include="-debug" Condition=" '%(_IkvmReferenceItemToCompile.Debug)' == 'true' " />
            <_IkvmCompilerArgs Include="-assembly:%(_IkvmReferenceItemToCompile.AssemblyName)" />
            <_IkvmCompilerArgs Include="-version:%(_IkvmReferenceItemToCompile.AssemblyVersion)" Condition=" '%(_IkvmReferenceItemToCompile.AssemblyVersion)' != '' " />
            <_IkvmCompilerArgs Include="-fileversion:%(_IkvmReferenceItemToCompile.AssemblyFileVersion)" Condition=" '%(_IkvmReferenceItemToCompile.AssemblyFileVersion)' != '' " />
            <_IkvmCompilerArgs Include="-runtime:$(IkvmRuntimeAssembly)" />
            <_IkvmCompilerArgs Include="-keyfile:%(_IkvmReferenceItemToCompile.KeyFile)" Condition=" '%(_IkvmReferenceItemToCompile.KeyFile)' != '' " />
            <_IkvmCompilerArgs Include="-delaysign:%(_IkvmReferenceItemToCompile.DelaySign)" Condition=" '%(_IkvmReferenceItemToCompile.DelaySign)' == 'true' " />
            <_IkvmCompilerArgs Include="-compressresources" />
            <_IkvmCompilerArgs Include="-strictfinalfieldsemantics" Condition=" '$(StrictFinalFieldSemantics)' == 'true' " />
            <_IkvmCompilerArgs Include="-removeassertions" Condition=" '$(RemoveAssertions)' == 'true' " />
            <_IkvmCompilerArgs Include="-target:library" />
            <_IkvmCompilerArgs Include="-nostdlib" />
            <_IkvmCompilerArgs Include="-classloader:%(_IkvmReferenceItemToCompile.ClassLoader)" Condition=" '%(_IkvmReferenceItemToCompile.ClassLoader)' != '' " />
            <_IkvmCompilerReferencePath Remove="@(_IkvmCompilerReferencePath)" />
            <_IkvmCompilerReferencePath Include="@(IkvmFrameworkReference);$(IkvmBaseAssembly);$(IkvmRuntimeAssembly);$(IkvmRuntimeJNIAssembly);@(_IkvmReferenceItemResolvedReference->Distinct())" />
            <_IkvmCompilerArgs Include="@(_IkvmCompilerReferencePath->'-reference:%(FullPath)')" />
            <_IkvmCompilerArgs Include="-out:%(_IkvmReferenceItemToCompile.StagePath)" />
            <_IkvmCompilerArgs Include="%(_IkvmReferenceItemToCompile.Compile)" />
        </ItemGroup>
        <WriteLinesToFile File="%(_IkvmReferenceItemToCompile.StagePath).rsp" Lines="@(_IkvmCompilerArgs)" Overwrite="true" />

        <Delete Files="%(_IkvmReferenceItemToCompile.StagePath)" Condition="Exists('%(_IkvmReferenceItemToCompile.StagePath)')" />
        <Exec Command="$(IkvmCompilerExec) @%(_IkvmReferenceItemToCompile.StagePath).rsp" />
        <Copy SourceFiles="%(_IkvmReferenceItemToCompile.StagePath)" DestinationFiles="%(_IkvmReferenceItemToCompile.CachePath)" OverwriteReadOnlyFiles="true" />

        <ItemGroup>
            <FileWrites Include="%(_IkvmReferenceItemToCompile.StagePath)" />
            <FileWrites Include="%(_IkvmReferenceItemToCompile.StagePath).rsp" />
        </ItemGroup>
    </Target>

</Project>